"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/ProteinViewer.tsx":
/*!******************************************!*\
  !*** ./src/components/ProteinViewer.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _InfoCard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InfoCard */ \"(app-pages-browser)/./src/components/InfoCard.tsx\");\n/* harmony import */ var _TerminalIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TerminalIcon */ \"(app-pages-browser)/./src/components/TerminalIcon.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst pointsOfInterest = [\n    {\n        id: 'experience',\n        title: 'Experience',\n        content: 'Here is a summary of my professional experience...',\n        position: {\n            x: -40,\n            y: 30,\n            z: 30\n        },\n        color: 'red'\n    },\n    {\n        id: 'projects',\n        title: 'Projects',\n        content: 'Here are some of the projects I have worked on...',\n        position: {\n            x: 40,\n            y: 30,\n            z: -30\n        },\n        color: 'green'\n    },\n    {\n        id: 'interests',\n        title: 'Interests',\n        content: 'I like building computers, video games, tennis, music, fashion, watching penguinz0, and Travis Scott',\n        position: {\n            x: -40,\n            y: -30,\n            z: -30\n        },\n        color: 'purple'\n    },\n    {\n        id: 'about-me',\n        title: 'About Me',\n        content: 'Hi! I\\'m Rithvik, a senior at UIUC majoring in Bioengineering and minoring in Computer Science. I\\'m interested in entrepreneurship, biology, and computers. I\\'m currently building Arcel AI (arcel.ai), researching AI & Robotics in agriculture at the USDA this summer.',\n        position: {\n            x: 40,\n            y: -30,\n            z: 30\n        },\n        color: 'blue'\n    }\n];\nconst ProteinViewer = (param)=>{\n    let { onSectionSelect, activeSection, onShowTerminal, sectionToNavigate, onNavigateComplete, onActiveCardChange } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const viewerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const autoRotateRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isInteractingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [selectedPoi, setSelectedPoi] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const selectedPoiRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [cardPosition, setCardPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [pois, setPois] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ProteinViewer.useEffect\": ()=>{\n            selectedPoiRef.current = selectedPoi;\n        }\n    }[\"ProteinViewer.useEffect\"], [\n        selectedPoi\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ProteinViewer.useEffect\": ()=>{\n            if (sectionToNavigate && viewerRef.current) {\n                const poiToNavigate = pois.find({\n                    \"ProteinViewer.useEffect.poiToNavigate\": (p)=>p.title.toLowerCase() === sectionToNavigate.toLowerCase()\n                }[\"ProteinViewer.useEffect.poiToNavigate\"]);\n                if (poiToNavigate) {\n                    handlePoiClick(poiToNavigate);\n                }\n                onNavigateComplete();\n            }\n        }\n    }[\"ProteinViewer.useEffect\"], [\n        sectionToNavigate,\n        pois\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ProteinViewer.useEffect\": ()=>{\n            const script = document.createElement('script');\n            script.src = 'https://3Dmol.org/build/3Dmol-min.js';\n            script.async = true;\n            script.onload = ({\n                \"ProteinViewer.useEffect\": ()=>{\n                    initializeViewer();\n                }\n            })[\"ProteinViewer.useEffect\"];\n            document.head.appendChild(script);\n            return ({\n                \"ProteinViewer.useEffect\": ()=>{\n                    if (autoRotateRef.current) {\n                        clearInterval(autoRotateRef.current);\n                    }\n                    if (document.head.contains(script)) {\n                        document.head.removeChild(script);\n                    }\n                }\n            })[\"ProteinViewer.useEffect\"];\n        }\n    }[\"ProteinViewer.useEffect\"], []);\n    const startAutoRotation = ()=>{\n        if (autoRotateRef.current) clearInterval(autoRotateRef.current);\n        autoRotateRef.current = setInterval(()=>{\n            if (viewerRef.current && !isInteractingRef.current) {\n                // Very slow, gentle left rotation\n                viewerRef.current.rotate(0.5, 'y');\n                viewerRef.current.render();\n            }\n        }, 50); // 20 FPS for smooth rotation\n    };\n    const stopAutoRotation = ()=>{\n        if (autoRotateRef.current) {\n            clearInterval(autoRotateRef.current);\n            autoRotateRef.current = null;\n        }\n    };\n    const initializeViewer = async ()=>{\n        if (containerRef.current && window.$3Dmol) {\n            // Create viewer with black background\n            const config = {\n                backgroundColor: 'black',\n                antialias: true,\n                quality: 'high'\n            };\n            const viewer = window.$3Dmol.createViewer(containerRef.current, config);\n            viewer.setBackgroundColor('black');\n            try {\n                // Fetch 5F9R - CRISPR-Cas9 bound to DNA\n                const response = await fetch('https://files.rcsb.org/download/5F9R.pdb');\n                const pdbData = await response.text();\n                // Add structure to viewer\n                viewer.addModel(pdbData, 'pdb');\n                // --- Calculate bounding box and reposition POIs ---\n                const atoms = viewer.getAtomsFromSel({});\n                let min = {\n                    x: Infinity,\n                    y: Infinity,\n                    z: Infinity\n                };\n                let max = {\n                    x: -Infinity,\n                    y: -Infinity,\n                    z: -Infinity\n                };\n                for (const atom of atoms){\n                    min.x = Math.min(min.x, atom.x);\n                    min.y = Math.min(min.y, atom.y);\n                    min.z = Math.min(min.z, atom.z);\n                    max.x = Math.max(max.x, atom.x);\n                    max.y = Math.max(max.y, atom.y);\n                    max.z = Math.max(max.z, atom.z);\n                }\n                const center = {\n                    x: (min.x + max.x) / 2,\n                    y: (min.y + max.y) / 2,\n                    z: (min.z + max.z) / 2\n                };\n                const size = {\n                    x: max.x - min.x,\n                    y: max.y - min.y,\n                    z: max.z - min.z\n                };\n                const updatedPois = [\n                    {\n                        ...pointsOfInterest[0],\n                        position: {\n                            x: center.x - size.x * 0.6,\n                            y: center.y + size.y * 0.3,\n                            z: center.z\n                        }\n                    },\n                    {\n                        ...pointsOfInterest[1],\n                        position: {\n                            x: center.x + size.x * 0.6,\n                            y: center.y,\n                            z: center.z\n                        }\n                    },\n                    {\n                        ...pointsOfInterest[2],\n                        position: {\n                            x: center.x,\n                            y: center.y - size.y * 0.6,\n                            z: center.z\n                        }\n                    },\n                    {\n                        ...pointsOfInterest[3],\n                        position: {\n                            x: center.x,\n                            y: center.y + size.y * 0.6,\n                            z: center.z\n                        }\n                    }\n                ];\n                setPois(updatedPois);\n                // --- End of repositioning logic ---\n                // Set cartoon representation with secondary structure coloring\n                viewer.setStyle({}, {\n                    cartoon: {\n                        color: 'spectrum',\n                        colorscheme: 'secondary',\n                        thickness: 0.3,\n                        opacity: 1.0,\n                        arrows: true\n                    }\n                });\n                // Show nucleic acids (DNA/RNA) as sticks for contrast\n                viewer.setStyle({\n                    resn: [\n                        'DA',\n                        'DT',\n                        'DG',\n                        'DC',\n                        'A',\n                        'U',\n                        'G',\n                        'C'\n                    ]\n                }, {\n                    stick: {\n                        radius: 0.3,\n                        colorscheme: 'nucleic'\n                    }\n                });\n                // Add clickable spheres for points of interest\n                updatedPois.forEach((poi)=>{\n                    viewer.addSphere({\n                        center: poi.position,\n                        radius: 2.0,\n                        color: poi.color,\n                        clickable: true,\n                        callback: ()=>handlePoiClick(poi)\n                    });\n                });\n                // Set initial view, zoom to ~60%, and lock zoom\n                viewer.zoomTo();\n                viewer.zoom(1.0); // Using 0.7 to make it smaller.\n                viewer.render();\n                // Lock the zoom using the viewer's built-in controls.\n                const currentDistance = viewer.getPerceivedDistance();\n                if (currentDistance) {\n                    viewer.setZoomLimits(currentDistance, currentDistance);\n                }\n                // Interaction tracking for auto-rotation\n                const container = containerRef.current;\n                const handleMouseDown = (e)=>{\n                    // Only track rotation interactions (left mouse button)\n                    if (e.button === 0) {\n                        isInteractingRef.current = true;\n                        stopAutoRotation();\n                    }\n                };\n                const handleMouseUp = ()=>{\n                    isInteractingRef.current = false;\n                    // Restart auto-rotation after 2 seconds of no interaction\n                    setTimeout(()=>{\n                        if (!isInteractingRef.current && !selectedPoiRef.current) {\n                            startAutoRotation();\n                        }\n                    }, 2000);\n                };\n                // Mouse interaction for rotation\n                container.addEventListener('mousedown', handleMouseDown);\n                container.addEventListener('mouseup', handleMouseUp);\n                container.addEventListener('mouseleave', handleMouseUp);\n                // Start auto-rotation\n                setTimeout(()=>{\n                    startAutoRotation();\n                }, 3000); // Start auto-rotation after 3 seconds\n                viewerRef.current = viewer;\n                setIsLoaded(true);\n            } catch (error) {\n                console.error('Error loading CRISPR-Cas9 structure:', error);\n                setIsLoaded(true);\n            }\n        }\n    };\n    const handlePoiClick = (poi)=>{\n        stopAutoRotation();\n        setSelectedPoi(poi);\n        onActiveCardChange(poi.title);\n        const screenPos = viewerRef.current.modelToScreen(poi.position);\n        const targetX = screenPos.x < window.innerWidth / 2 ? window.innerWidth * 0.25 : window.innerWidth * 0.75;\n        const targetY = screenPos.y;\n        setCardPosition({\n            x: targetX,\n            y: targetY\n        });\n    };\n    const handleCloseCard = ()=>{\n        setSelectedPoi(null);\n        onActiveCardChange(null);\n        startAutoRotation();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-screen bg-black flex items-center justify-center relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_TerminalIcon__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                onClick: onShowTerminal\n            }, void 0, false, {\n                fileName: \"/Users/rithvikmani/rithvik-mani/src/components/ProteinViewer.tsx\",\n                lineNumber: 272,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: containerRef,\n                className: \"w-full h-full cursor-grab active:cursor-grabbing select-none\",\n                style: {\n                    backgroundColor: 'black',\n                    userSelect: 'none',\n                    touchAction: 'pan-x pan-y',\n                    WebkitUserSelect: 'none',\n                    MozUserSelect: 'none',\n                    msUserSelect: 'none'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/rithvikmani/rithvik-mani/src/components/ProteinViewer.tsx\",\n                lineNumber: 273,\n                columnNumber: 7\n            }, undefined),\n            !isLoaded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-gray-500 font-mono\",\n                    children: \"Loading CRISPR-Cas9 structure...\"\n                }, void 0, false, {\n                    fileName: \"/Users/rithvikmani/rithvik-mani/src/components/ProteinViewer.tsx\",\n                    lineNumber: 287,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/rithvikmani/rithvik-mani/src/components/ProteinViewer.tsx\",\n                lineNumber: 286,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_InfoCard__WEBPACK_IMPORTED_MODULE_2__.InfoCard, {\n                poi: selectedPoi,\n                onClose: handleCloseCard,\n                cardPosition: cardPosition\n            }, void 0, false, {\n                fileName: \"/Users/rithvikmani/rithvik-mani/src/components/ProteinViewer.tsx\",\n                lineNumber: 290,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/rithvikmani/rithvik-mani/src/components/ProteinViewer.tsx\",\n        lineNumber: 271,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ProteinViewer, \"Z+PKzb/5QSsdh9x3oXGJLineNvQ=\");\n_c = ProteinViewer;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ProteinViewer);\nvar _c;\n$RefreshReg$(_c, \"ProteinViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ProteinViewer.tsx\n"));

/***/ })

});